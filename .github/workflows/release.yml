name: Release

on:
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        options: [patch, minor, major]
        required: true

jobs:
  github-release:
    name: GitHub release
    runs-on: ubuntu-latest
    environment: GitHub Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Cache dependencies
        uses: actions/cache@v2
        env:
          CACHE_VERSION: v1
        with:
          path: |
            ~/.cache/yarn
            node_modules
          key: ${{ runner.os }}-dependencies-${{ env.CACHE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-dependencies-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-dependencies-

      - name: Install dependencies
        run: yarn

      - name: Upgrade version and save necessary data to env
        run: |
          PREVIOUS_VERSION=$(node ./dev/release/getVersion.js)

          yarn release:upgrade ${{ github.event.inputs.mode }}

          RELEASE_VERSION=$(node ./dev/release/getVersion.js)

          git remote set-url origin git@github.com-fast-scroll:diego-aquino/fast-scroll.git
          mkdir -p ~/.ssh
          echo "${{ secrets.RELEASE_DEPLOY_KEY }}" > ~/.ssh/github-deploy_key
          chmod 600 ~/.ssh/github-deploy_key
          echo "
          Host github.com-fast-scroll
            Hostname github.com
            IdentityFile=~/.ssh/github-deploy_key
          " > ~/.ssh/config

          git add .
          git commit -m "chore: upgrade version from v$PREVIOUS_VERSION to v$RELEASE_VERSION"
          git push

          git fetch --tags
          EXISTING_RELEASE_VERSION=$(git tag -l v$RELEASE_VERSION)

          echo 'RELEASE_VERSION='$RELEASE_VERSION >> $GITHUB_ENV
          echo 'EXISTING_RELEASE_VERSION='$EXISTING_RELEASE_VERSION >> $GITHUB_ENV

          rm ~/.ssh/github-deploy_key

      - name: Generate build
        if: ${{ env.EXISTING_RELEASE_VERSION == '' }}
        run: yarn turbo run build

      - name: Create GitHub release
        if: ${{ env.EXISTING_RELEASE_VERSION == '' }}
        uses: ncipollo/release-action@v1
        with:
          name: Fast Scroll v${{ env.RELEASE_VERSION }}
          tag: v${{ env.RELEASE_VERSION }}
          commit: main
          draft: true
          allowUpdates: false
          artifacts: 'build/*.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
